{
	"info": {
		"_postman_id": "fb1a0ca7-0f69-4930-aef7-94babd74fe11",
		"name": "Spotify Playlist Generator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25339339"
	},
	"item": [
		{
			"name": "Get Artist",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    var artist = JSON.parse(responseBody);",
							"  // Store the artist name in the environment",
							"    postman.setEnvironmentVariable(\"artist_name\", artist.name);",
							"  // Store the artist id in an artists array",
							"    postman.setEnvironmentVariable(\"artists\", JSON.stringify([environment.id]));",
							"    // As defined in the workflow, set the next request to be executed to Get Related Artists",
							"    postman.setNextRequest(\"Get Related Artists\");",
							"    console.log(\"Information retrieved for artist: \" + environment.artist_name);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://api.spotify.com/v1/artists/{{id}}",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Related Artists",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    var N = _.parseInt(environment.N),",
							"        relatedArtists = _(JSON.parse(responseBody).artists).sample(N).pluck('id').value(),",
							"        artists = JSON.parse(environment.artists);",
							"    ",
							"    artists = _.union(artists, relatedArtists);",
							"    postman.setEnvironmentVariable(\"artists\", JSON.stringify(artists));",
							"    postman.setNextRequest(\"Create a Playlist\");",
							"    console.log(\"Related artists retrieved for: \" + environment.artist_name);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://api.spotify.com/v1/artists/{{id}}/related-artists",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"{{id}}",
						"related-artists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = (responseCode.code === 201);",
							"",
							"if (responseCode.code === 201) {",
							"    var playlist = JSON.parse(responseBody);",
							"    ",
							"    // Store the playlist id in the environment to add tracks in the future",
							"    postman.setEnvironmentVariable(\"playlist_id\", playlist.id);",
							"    postman.setNextRequest(\"Get Artist Top Tracks\");",
							"    console.log(\"Created playlist: \" + environment.artist_name + \" Mix\");",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{artist_name}} Mix\",\n  \"public\": false\n}"
				},
				"url": {
					"raw": "https://api.spotify.com/v1/users/{{user_id}}/playlists",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"users",
						"{{user_id}}",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Artist Top Tracks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = (responseCode.code === 200);",
							"",
							"if (responseCode.code === 200) {",
							"    var N = _.parseInt(environment.N),",
							"        tracks = _(JSON.parse(responseBody).tracks).sample(N).pluck('id').value();",
							"    ",
							"    // Store the track ids in the Environment, to be used in the next request",
							"    postman.setEnvironmentVariable(\"tracks\", JSON.stringify(tracks));",
							"    postman.setNextRequest(\"Add Tracks to Playlist\");",
							"    console.log(\"Related artists retrieved for: \" + environment.artist_name);",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Counter for the loop",
							"var c = environment.c ? _.parseInt(environment.c) : 0;",
							"var artists = JSON.parse(environment.artists);",
							"",
							"// This value will be use in the URL",
							"postman.setEnvironmentVariable(\"artist_id\", artists[c]);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://api.spotify.com/v1/artists/{{artist_id}}/top-tracks?country={{country_code}}",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"artists",
						"{{artist_id}}",
						"top-tracks"
					],
					"query": [
						{
							"key": "country",
							"value": "{{country_code}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Tracks to Playlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = (responseCode.code === 201);",
							"",
							"if (responseCode.code === 201) {",
							"    var N = _.parseInt(environment.N);",
							"    // Increment artist counter by 1",
							"    var c = environment.c && (_.parseInt(environment.c) + 1) || 1;",
							"    ",
							"    // If end of the loop, donâ€™t setNextRequest",
							"    if (c === N + 1) {",
							"        postman.setEnvironmentVariable(\"c\", 0);",
							"        console.log(\"And we're done!\");",
							"    }",
							"    // otherwise loop back to the previous request, to retrieve data for the next artist",
							"    else {",
							"        postman.setEnvironmentVariable(\"c\", c);",
							"        postman.setNextRequest(\"Get Artist Top Tracks\");",
							"        console.log(\"Moving to next artist's tracks\");",
							"    }",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var tracks = JSON.parse(environment.tracks);",
							"// As required by Spotify API",
							"var uris = _.map(tracks, function (track) {",
							"        return \"spotify:track:\" + track;",
							"    }).join(\",\");",
							"",
							"postman.setEnvironmentVariable(\"uris\", uris);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authorization}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://api.spotify.com/v1/users/{{user_id}}/playlists/{{playlist_id}}/tracks?uris={{uris}}",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"users",
						"{{user_id}}",
						"playlists",
						"{{playlist_id}}",
						"tracks"
					],
					"query": [
						{
							"key": "uris",
							"value": "{{uris}}"
						}
					]
				}
			},
			"response": []
		}
	]
}